-A flexible means of importing data into bro
    -dynamic
    -static

-Two modes in which data may be read and used
    -Tables
    -Custom event callbacks

# Format
-Expected to be formatted akin to the log file format
    -Fields are tab delimited

-The first line of a file delimited the fields
    -The absolute beginning is marked as #fields
    -Each field there after is named and tab separated

-Example
#fields ip      timestamp       reason
192.168.17.1    1333252748      Malware host
192.168.27.2    1330235733      Botnet server
192.168.250.3   1333145108      Virus detected


# Events and Functions

----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Function/Event                                                          Description
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
function Input::add table(description:Input::TableDescription) : bool   Create a new table input from a given source.
function Input::add_event(description:Input::EventDescription) : bool   Create a new event input from a given source.
function Input::force_update(id: string) : bool                         Forces the current input to be checked for changes.
event Input::end_of_data(name: string, source: string);                 Event that is called when the end of a data source has been reached, including after an update.
----------------------------------------------------------------------------------------------------------------------------------------------------------------------

# Modes
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Mode              Description
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Input::MANUAL     File is not updated after it has been initially read.
Input::REREAD     The whole file is read again each time a change is found. This should be used for files that are mapped to a table where individual lines can change.
Input::STREAM     Data from the file is streamed. Events/table entries will be generated as new data is added to the file.
----------------------------------------------------------------------------------------------------------------------------------------------------------------------

# Input::add_table(...) Arguments
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Option        Description
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
$source       A mandatory string identifying the source of the data. For the ASCII reader this is the filename.
$name         A mandatory name for the filter that can later be used to manipulate it further.
$idx          Record type that defines the index of the table
$val          Record type that defines the values of the table reader
$mode         The mode in which the stream is opened.
$destination  The destination table
$ev           Optional event that is raised, when values are added to, changed in or deleted from the table. Events are passed an Input::Event description as the first
              argument, the index record as the second argument and the values as the third argument.
$pred         Optional predicate, that can prevent entries fro being added to the table and events fro being sent.
----------------------------------------------------------------------------------------------------------------------------------------------------------------------


