Bro's logging framework provides an easy and systematic way to generate logs. There still exists a need to indicate when a specific behavior has been detected and a method to allow that detection to come to someone's attention.

The notice framework is in place to allow script writers a codified means through which they can raise a notice, as well as a system through which an operator can opt-in to receive the notice.

-Caveat: It is up to YOU to determine what notices are loaded and how they effectively work in a given installation


# Notice Fields
----------------------------------------------------------------------------------------------------------------------------------
Field Name    Description
----------------------------------------------------------------------------------------------------------------------------------
$note         This field is required and is an enum value which represents the notice type.

$msg          This is a human readable message which is meant to provide more information about this type. 

$sub          This is a sub-message meant for human readability but will also be used to contain data menat for Notice::policy

$conn         If a connection record is available when the notice is being raised and the notice represents some attribute of
              the connection, then the connection record can be given here. Other fields such as $id and $src will automatically
              be populated from this value.

$id           If a conn_id record is available when the notice is being raised and the notice represents some attribute
              of the connection, then the connection can be given here. Other fields such as $src will automatically be
              populated from this value.

$src          If the notice represents an attribute of a single host then it's possible that only this field should be filled out
              to represent the host that is being "noticed".

$n            This normally represents a number if the notice has to do with some number. It's most frequently used for
              numeric tests in the Notice::policy for making policy decisions.
$identifier   This represents a unique identifier for this notice. This field may be used to suppress notices.

$suppress_for This field can be set if there is a natural suppression interval for the notice that may be different
              than the default value. The value set to this field can also be modified by a user's Notice::policy so the
              value is not set permanently and unchangeably.
----------------------------------------------------------------------------------------------------------------------------------


# Suppressing Notices

The notice framework supports suppression for notices if the author of the script that is generating the notice has indicated to the notice frameework how to identify notices that are intrinsically the same. Identifaction of these "intrinsically duplicate" notices is implemented with an optional field in Notice::Info records named $identifier which is a simple string.

If the $identifier and $note fields are the same for two notices, the notice framework actually considers them to be the same thing and can use that information to suppress duplicates for a configurable period of time ($suppress_for)

Summary: Use the $identifier field in all NOTICE messages to take advantage of automatic suppression to lower the SNR.

# Notice Policy Hooks

-The hook takes the same Notice::Info record that is generated by the NOTICE call

-Fields may be modified or removed

-Notices may be completely ignored or suppressed


