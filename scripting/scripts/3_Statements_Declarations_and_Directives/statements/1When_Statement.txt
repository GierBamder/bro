#When statement

Evaluates a given expression, which must result in a value of type bool. When the value of the expression becomes available and if the result
is true, then a specified statement is executed.

In the following example, if the expression evaluates to true, then the print statement is executed:

    when ((local x = foo()) && x == 42)
        print x;

However, if a timeout is specified, and if the expression does not evaluate to true within the specified timeout interval, then the statement
following the timeout keyword is executed:

    when ((local x = foo()) && x == 42)
        print x;
    timeout 5sec(
        print "timeout";
    }

Note that when a timeout is specified the braces are always required (these do not indicate a compound statement).

The expression in a when statement can contain a declaration of a local variable but only if the declaration is written in the form `local var = init`
(e.g.: `local x = myfunction()`). This form of a local declaration is actually an expression, the result of which is always a boolean true value.

The expression in a when statement can contain an asynchronous function call such as lookup+hostname (in fact, this is the only place such a function
can be called), but it can also contain an ordinary function call. When an asynchronous function call is in the expression, then bro will continue
processing statements in the script following the when statement, and when the result of the function call is available bro will finish evaluating the
expression in the when statement.

There is a special form of the return statement that is only allowed in functions. Syntactically, it looks like a when statement
immediately preceded by the return keywork. This form of the return statement is used to specify a function that delays its result (such a
function can only be called in the expression of a when statement). The function returns at the time the when statement's condition becomes true,
and the function returns the value that the when statement's body returns (of if the condition does not become true within the specified timeout inteval,
then the function returns the value that the timeout block returns).


