#Looping and Break Statements

-Looping statements include: for, while, next

-Immediate loop short-circuit: break

#for - Statement
-A for loop iterates over each element in a string, set, vector, or table and executes a statement for each iteration
(note that the order in which the loop iterates over the elements in a set or a table is nondeterministic). However,
no loop iterations occur if the string, set, vector, or table is empty.

    local test = "Testing 1 2 3";
    for (i in test){
        print fmt("i = %s", i);
    }


-For each iteration of the loop, a loop variable will be assigned to an element if the expression evaluates to a string or set, or an index
if the expression evaluates to a vector or table. Then the statement is executed.

    local v = vector("abc","def","ghi","jkl","mno","pqr","stu","vwxyz");
    for (index in v){
        print fmt("index = %d, entry = %s", index, v[index]);
    }


-If the expression is a table or a set with more than one index, then the loop variable must be specified as a comma-separated list of different
loop variables (one for each index), enclosed in brackets.

-Note that the loop variable in a for statement is not allowed to be a global variable, and it does not need to be declared prior to the for statement.
The type will be inferred from the elements of the expression.

-Currently, modifying a container's membership while iterating over it may result in undefined behavior, so do not add or remove elements inside the loop.

-A break statement will immediately terminate the for loop, and a next statement will skip to the next loop iteration.

-The next statement can only appear within a for or while loop.



