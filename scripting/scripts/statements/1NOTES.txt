
-Statements (except those contained within a function, hook, or event handler) can appear only after all global
declarations in the concatenation of all loaded Bro scripts.

-Each statement in a Bro script must be terminated with a semicolon (with a few exceptions noted below). 
An individual statement can span multiple lines.

Supported Statements:

local                         Declare a variable
add, delete                   Add or delete elements
print                         Print stdout or a file
for, while, next, break       Loop over each element in a container object (for), or as long as a condition evaluates to true (while).
if                            Evaluate boolean expression and if true, execute a statement
switch, break, fallthrough    Evaluate expression and execute statement with a matching value
when                          Asynchronous execution
event, schedule               Invoke or schedule an event handler

-Evaluates a given expression, which mus yield a bool value. If true, then a specified statement is executed. If false, then the statement is not executed.

    if ( x == 0xDEADBEEF ) {
        print "Here's the beef!";
    }
-Else if and else exist for fall-through options in comples comparisons.

    local x = 0x12345678;

    if ( x == 0xDEADBEEF ) {
        print "Here's the beef!";

    } else if ( x != 0x11111111 ) {
        print "All ones..";
    } else if ( x == 0x12345678 ) {
        print "This should match";
    } else {
        print "Hitting the else at the bottom";
    }


-Rule #1 - Check a condition early, RETURN early.

-Rule #2 - If statements with more than two 'else ifs' should be refactored into a switch for clarity.

-Rule #3 - Build and maintain a consist style for formatting if statements.


